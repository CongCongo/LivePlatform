同志们，我调研了一下前端的自动化生成文档的工具，大致有以下几个：

YUIDoc
YUIDoc支持多种语言，它仅对注释块内部的内容进行解析。我们需要对函数、类、命名空间等的名称和更多的内容进行显性的声明。它可能会造成文档和代码实现的不一致，甚至对于接口的使用造成不好的影响。YUIDoc对于注释内容要求严格的两层结构：Primary Tag和Secondary Tag。但是它基于nodejs，比较适合我们的环境。我已安装成功，并已跑过自己写的一个小example。
安装步骤：（在bash里）
npm install simplejson --save
npm install cheetah
npm install pygments
sudo npm -g install yuidocjs
（前两个我是看的网上说是yuidoc的依赖，但是我npm install的时候出现了一堆error，我没管，但我安装yuidoc并运行仍然正常，所以可能是不需要的）
（这个我本来非常想选，因为它支持多种语言，好像只要有注释块就能识别，但我今天下午尝试了js文件，然后成功了，但是尝试了vue文件失败了）
更多操作详见：
http://www.iunbug.com/archives/2012/06/07/296.html

JSDoc
JSDoc 3很大程度上参考了Javadoc的实现。它有非常详细的语法规则，并且你只有当和代码实现完全一致的时候，它才能正确的生成文档。但是对于Javascript这样一门灵活的语言而言，这似乎并不是最适合的方式。虽然代码有推荐的最佳实践，但是为了让文档生成工具能够正确识别而要对原本的代码进行修改就有点僭越本份的意味了。而且它生成的文档默认的样式非常糟糕，易读性差。（所以我不想选）


JSDuck
JSDuck既对代码的实现进行了最基本的解析，从中获取对应的名称、变量，有效的减少了Tag的使用。同时又不像JSDoc 3那样严格，我尝试了CommonJS、AMD和IIFE都能够非常自然的生成对应的文档。（本来我是非常想用它的）
但是它安装比较麻烦，我找到了windows安装的方法（要安装ruby和developmentkit），也找到了linux的（还包括Ubuntu的）
要在我们的环境中安装需安装ruby，然后使用之后 gem 安装 jsduck
我安装ruby成功了，但是gem install jsduck不成功
但是我npm install jsduck成功了，但是我在-bash里操作 jsduck: command not found
就是它安装不在bin文件夹里，而且我觉得它和我们配置的环境不适合，所以应该不会用它


doxgen
我上网了解了一下，它完全支持C、C++、Java、Objective-C和IDL语言，部分支持PHP、C#，不支持JavaScript！！！

然后我问了一下老师，老师说不一定非要用doxgen，自动化生成的都可以，生成的文档格式没有要求（因为我看doxgen可以生成chm文件，但我测试的YUIDoc是生成一个包，里面有html文件可以但生成的文档），老师说任何一个生成文档的标准格式都可以。


总的来说，我想说要不我们就用YUIDoc吧，你们有什么建议吗？